version: '3.8'

services:
  # Fast Blockchain Indexer (Runs Continuously)
  indexer:
    build: .
    container_name: lucky_ponds_indexer
    command: python indexer.py
    env_file:
      - .env
    volumes:
      - ./data:/app/data
    restart: unless-stopped
    networks:
      - lucky_ponds_network

  # Points Calculator (Runs on Schedule)
  calculator:
    build: .
    container_name: lucky_ponds_calculator
    command: python scheduler.py --interval ${POINTS_CALCULATION_INTERVAL:-3600}
    env_file:
      - .env
    volumes:
      - ./data:/app/data
    restart: unless-stopped
    networks:
      - lucky_ponds_network
    depends_on:
      - indexer

  # Winner Selector (Keeper - Runs every 5 minutes)
  keeper:
    build: .
    container_name: lucky_ponds_keeper
    command: |
      sh -c "
        echo '*/5 * * * * cd /app && /usr/local/bin/python winner_selector.py >> /app/data/keeper.log 2>&1' | crontab - &&
        cron -f
      "
    env_file:
      - .env
    volumes:
      - ./data:/app/data
    restart: unless-stopped
    networks:
      - lucky_ponds_network

  # API Server
  api:
    build: .
    container_name: lucky_ponds_api
    command: gunicorn --bind 0.0.0.0:5000 app:app --workers 4 --timeout 120
    ports:
      - "${API_PORT:-5000}:5000"
    env_file:
      - .env
    volumes:
      - ./data:/app/data
    restart: unless-stopped
    networks:
      - lucky_ponds_network
    depends_on:
      - indexer
      - calculator

  # One-time Database Setup
  setup:
    build: .
    container_name: lucky_ponds_setup
    command: python db_setup.py
    env_file:
      - .env
    volumes:
      - ./data:/app/data
    networks:
      - lucky_ponds_network

networks:
  lucky_ponds_network:
    driver: bridge